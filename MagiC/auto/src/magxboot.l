
RESVALID EQU $426
RESVECTOR EQU $42A
PHYSTOP EQU $42E
_MEMTOP EQU $436
TRP14RET EQU $486
__MD EQU $49E
_HZ_200 EQU $4BA
_SYSBASE EQU $4F2
MEMVAL3 EQU $51A
PROC_TYPE EQU $59E
_COOKIE EQU $5A0
RAMTOP EQU $5A4
RAMVALID EQU $5A8

 ILABEL TOS.Q

DEBUT:

 MOVE.L 4(SP),A5;d‚but de la basepage
 MOVE.L $C(A5),D0;taille segment TEXT
 ADD.L $14(A5),D0;taille segment DATA
 ADD.L $1C(A5),D0;taille segment BSS
 ADD.L #1800,D0;pour la pile et la basepage
 AND.B #$FE,D0
 LEA -104(A5,D0.L),SP
 SETBLOCK D0,(A5)
 MOVE.L #"MagX",D0
 BSR GET_COOKIE
 BPL \1
 CLR.L MACHINE
 CLR CT60
 MOVE.L #"_MCH",D0
 BSR GET_COOKIE
 BMI.S \2;pas de cookie-jar
 MOVE.L D0,A0
 MOVE.L (A0),MACHINE
\2:CMP.L #$30000,MACHINE;FALCON
 BNE.S \3
 MOVE.L #"_CPU",D0
 BSR GET_COOKIE
 BMI.S \3;pas de cookie-jar
 MOVE.L D0,A0
 MOVE.L (A0),CPU
 CMP.L #60,CPU
 BNE.S \3
 ST.B CT60
\3:PRINTLINE MESS
 KBSHIFT #-1
 AND #3,D0;touches SHIFT
 CMP #3,D0 
 BEQ \1
 OPEN #0,NOM_MAGIC
 MOVE D0,D7
 BMI \1
 LSEEK #2,D7,#0
 MOVE.L D0,D6
 BLE \1
 LSEEK #0,D7,#0
 TST.L D0
 BMI \1 
 MALLOC D6 
 TST.L D0
 BLE \1
 MOVE.L D0,A6
 READ (A6),D6,D7
 MOVE.L D0,-(SP)
 CLOSE D7
 CMP.L (SP)+,D6
 BNE \1
 TST.L D0
 BMI \1
 CMP #$601A,(A6)
 BNE \1
 MOVE.L $30(A6),A0
 LEA $1C(A6,A0.L),A0
 CMP.L #$87654321,(A0)+
 BNE \1
 MOVE.L (A0)+,A5
 ADDQ.L #4,A0
 CMP.L #"MAGX",(A0)
 BNE \1
 SUPER 0
 MOVE.L #$1000000,__MD
 CMP.L #$1357BD13,RAMVALID
 BNE.S \4
 CMP.L #$1080000,RAMTOP
 BCS.S \4
 MOVE.L #$1000000,A5
\4:CMP.L #$20000,MACHINE
 BCS.S \5
 MOVE #$300,D0
 CMP.L #$30000,MACHINE
 BCS.S \6
 MOVE #$400,D0
\6:MOVE D0,$1E(A6)
\5:CURDRV
 MOVE.L $30(A6),A0
 LEA $1C(A6,A0.L),A0
 LEA $7A(A0),A0
 CMP.L #$5F5F5F5F,(A0)
 BNE.S \8
 ADD.B #"A",D0
 MOVE.B D0,(A0)+
 MOVE.B #":",(A0)+
 MOVE.L A4,A1
\7:MOVE.B (A1)+,(A0)+
 BNE.S \7
\8:MOVE.L 2(A6),D0
 ADD.L 6(A6),D0
 MOVE.L D0,D5
 ADD.L $E(A6),D0
 LEA $1C(A6,D0.L),A3
 LEA (A6,D6.L),A2
 CMP.L A2,A3
 BCC.S \9
 LEA $1C(A6),A0;reloge MagiC
 MOVE.L (A3)+,D0
\10:ADD.L D0,A0
  MOVE.L A5,D0
  ADD.L D0,(A0)
\11:CMP.L A2,A3
   BHI.S \9
   MOVEQ #0,D0
   MOVE.B (A3)+,D0
   BEQ.S \9
   CMP.B #1,D0
   BNE.S \10
  LEA 254(A0),A0
 BRA.S \11
\9:LEA $1C(A6),A0
 LEA (A0,D5.L),A1
 MOVEQ #0,D0
\12:ADD.L (A0)+,D0
 CMP.L A0,A1
 BCS.S \12
 MOVE.L D0,TRP14RET
 TST CT60
 BEQ \21
 LEA $1C(A6),A1;patchs
 MOVE.L D5,D1
 LSR.L #1,D1
 MOVEQ #0,D2
\22:MOVE.L (A1),D0
  CMP.L #$203C0000,D0;MOVE.L #$808,D0
  BNE.S \26
  CMP.L #$08084E7B,4(A1);MOVEC.L D0,CACR
  BEQ.S \27
  CMP.L #$31114E7B,4(A1);MOVE.L #$3111,D0
  BNE.S \26
  MOVE.L #$203CA080,(A1)
  MOVE.L #$80004E7B,4(A1)
  PRINTLINE MESS1
  ADDQ #1,D2
  BRA \23
\27:MOVE.L #$70004E7B,(A1)
  MOVE.L #$00024E71,4(A1)
  MOVE #$F4F8,8(A1);CPUSHA BC
  PRINTLINE MESS2
  ADDQ #1,D2
  BRA \23
\26:CMP.L #$4E7A0002,D0;MOVE.L CACR,D0
  BNE.S \37
  CMP.L #$08C00003,4(A1);BSET #3,D0
  BNE.S \37
  CMP.L #$4E7B0002,8(A1);MOVEC.L D0,CACR
  BNE.S \37
  CMP.L #$70021238,12(A1)
  BNE.S \37
  MOVE.L #$F4F84E71,(A1);CPUSHA BC
  MOVE.L #$4E714E71,4(A1)
  MOVE.L #$4E714E71,8(A1)
  PRINTLINE MESS3
  ADDQ #1,D2
  BRA \23
\37:CMP.L #$03C80000,D0;MOVE.L D1,(A0)
  BNE.S \24
  CMP.L #$03C80008,4(A1);MOVEP.L D1,8(A0)
  BNE.S \24
  CMP.L #$03C80010,8(A1);MOVEP.L D1,16(A0)
  BNE.S \24
  MOVE.L #$72E84230,(A1)
  MOVE.L #$10185481,4(A1)
  MOVE.L #$66F84E71,8(A1)
  PRINTLINE MESS4
  ADDQ #1,D2
  BRA \23
\24:CMP.L #$203C0088,D0;MOVE.L #$00880105,D0
  BNE.S \25
  CMP.L #$010501C8,4(A1);MOVEP.L D0,$26(A0)
  BNE.S \25
  CMP #$0026,8(A1)
  BNE.S \25
  MOVE.L #$42280026,(A1)
  MOVE.L #$117C0088,4(A1)
  MOVE.L #$0028117C,8(A1)
  MOVE.L #$0001002A,12(A1)
  MOVE.L #$117C0005,16(A1)
  MOVE.L #$002C6038,20(A1)
  PRINTLINE MESS5
  ADDQ #1,D2
  BRA \23
\25:CMP.L #$204F7000,D0;060
  BNE.S \28
  CMP #$21FC,4(A1)
  BNE.S \28
  MOVE.L #$703C4E75,(A1)
  PRINTLINE MESS6
  ADDQ #1,D2
  BRA \23
\28:CMP.L #$41F80008,D0;vecteurs
  BNE.S \31
  CMP.L #$703D43FA,4(A1)
  BNE.S \31
  MOVE #$7008,4(A1)
  PRINTLINE MESS7
  ADDQ #1,D2
  BRA \23
\31:CMP.L #$703D20C9,D0;vecteurs
  BNE.S \32
  CMP.L #$D3C151C8,4(A1)
  BNE.S \32
  MOVE #$7008,(A1)
  PRINTLINE MESS8
  ADDQ #1,D2
  BRA \23
\32:CMP.L #$21C80010,D0;vecteurs
  BNE.S \33
  CMP.L #$21C8002C,4(A1)
  BNE.S \33
  MOVE.L #$4E714E71,4(A1)
  PRINTLINE MESS9
  ADDQ #1,D2
  BRA \23
\33:CMP.L #$4E700CB8,D0;reset
  BNE.S \34
  CMP.L #$31415926,4(A1)
  BNE.S \23
  PRINTLINE MESS10
  ADDQ #1,D2
  BRA.S \36
\34:CMP.L #$4E7021F8,D0;reset
  BNE.S \35
  CMP.L #$00040008,4(A1)
  BNE.S \33
  PRINTLINE MESS11
  ADDQ #1,D2
\36:MOVE #$4E71,(A1)
  BRA.S \23
\35:CMP.L #$41F81084,D0;Init DSP
  BNE.S \23
  CMP #$43F9,4(A1)
  BNE.S \23
  MOVE #$4E75,(A1)
  PRINTLINE MESS12
  ADDQ #1,D2
\23:ADDQ #2,A1
 SUBQ.L #1,D1
 BGT \22
 MOVEQ #15,D3
 CMP D3,D2
 BEQ \21
 PRINTLINE ERR
 LINK A5,#-4
 CLR -2(A5)
 LEA -4(A5),A0
 MOVE.L D2,D0
 MOVEQ #2,D1
 BSR CONV_DECI
 PRINTLINE -4(A5)
 CONOUT #"/"
 LEA -4(A5),A0
 MOVE.L D3,D0
 MOVEQ #2,D1
 BSR CONV_DECI
 PRINTLINE -4(A5)
 UNLK A5
 CONOUT #")"
 CONIN_WE
\21:OR #$700,SR;interdit interruptions
 LEA \14(PC),A1
 LEA $600,A0
 MOVEQ #((\1-\14)/4)-1,D0
\13:MOVE.L (A1)+,(A0)+
 DBRA D0,\13
 MOVE.L _MEMTOP,PHYSTOP
 CMP.L #40,CPU
 BCS.S \15
 MOVEQ #0,D0;inhibe & vide caches
 DC.L $4E7B0002;MOVEC.L D0,CACR
 DC.W $F518;PFLUSHA
 DC.W $F4F8;CPUSHA BC
 BRA.S \29
\15:CMP.L #20,CPU
 BCS.S \29
 DC.L $4E7A0002;MOVEC.L CACR,D0
 OR #$808,D0;CD caches vid‚s
 DC.L $4E7B0002;MOVEC.L D0,CACR
\29:JMP $600
\14:MOVE.L A5,A0
 LEA $1C(A6),A1
 MOVE.L D5,D0
 LSR.L #3,D0
 SUBQ.L #1,D0
 CMP.L A0,A1;d‚place MagiC
 BHI.S \16
 BEQ.S \18
 ADD.L D5,A1
 ADD.L D5,A0
\17:MOVE.L -(A1),-(A0)
  MOVE.L -(A1),-(A0)
 DBRA D0,\17
 BRA.S \18
\16:MOVE.L (A1)+,(A0)+
  MOVE.L (A1)+,(A0)+
 DBRA D0,\16
\18:MOVE.L #$5555AAAA,MEMVAL3
 MOVE.L #$31415926,RESVALID
 MOVE.L A5,RESVECTOR
 CMP.L #$1000000,A5
 BNE.S \19
 ADD.L D5,__MD
 BRA.S \20
\19:ADD.L D5,$C(A5)
 MOVE.L $14(A5),A0
 CMP.L #$87654321,(A0)+
 BNE.S \20
 ADD.L D5,(A0)
\20:CLR.L _HZ_200
 JMP (A5)
 NOP
\1:TERM
 ILLEGAL
 RTS
 
CONV_DECI:;A0:pointeur cible chaŒne ASCII, D0:valeur sur 32 bits, D1:nombre de chiffres

 BSR CONV_DECI_SIMPLE
 SUBQ #1,D1
 BEQ.S \1
 SWAP D0
 TST D0
 BNE.S \3;d‚passement
 MOVEQ #0,D0
\2:CMP.B #"0",(A0,D0)
  BNE.S \1
  MOVE.B #" ",(A0,D0);enl‚ve les z‚ros inutiles
  ADDQ #1,D0
 CMP D1,D0
 BNE.S \2
 BRA.S \1
\3:MOVE.B #"?",(A0,D1)
 DBRA D1,\3
\1:RTS

CONV_DECI_SIMPLE:;A0:pointeur cible chaŒne ASCII, D0:valeur sur 32 bits, D1:nombre de chiffres

 MOVE D1,-(SP)
 SUBQ #1,D1
 MOVE.L D0,-(SP)
\1:MOVEQ #0,D0
  MOVE (SP),D0
  DIVU #10,D0;poids fort /10
  MOVE D0,(SP);r‚sultat poids fort
  MOVE 2(SP),D0
  DIVU #10,D0;((reste * 65536) + poids faible)/10
  MOVE D0,2(SP);r‚sultat poids faible
  SWAP D0
  OR #$30,D0
  MOVE.B D0,(A0,D1)
 DBRA D1,\1
 ADDQ.L #4,SP
 MOVE (SP)+,D1
 RTS

GET_COOKIE:;nom dans D0.L, au retour si < 0 pas de cookie
;retourne le pointeur sur donn‚e cookie dans D0

 MOVEM.L D1-A1/A6,-(SP)
 MOVE.L D0,D6
 SUB.L A6,A6
 SUPER 1
 TST.L D0
 BMI.S \5;mode superviseur
 SUPER 0
 MOVE.L D0,A6;sauve SSP
\5:MOVEQ #0,D7
 MOVE.L _COOKIE,D0
 BEQ.S \1
 MOVE.L D0,A0
\2:TST.L (A0)
  BEQ.S \1
  CMP.L (A0),D6
  BNE.S \3
  MOVE.L A0,D7
  ADDQ #4,D7
  BRA.S \1
\3:ADDQ #8,A0
 BRA.S \2
\1:MOVE.L A6,D0
 BEQ.S \4
 SUPER (A6)
\4:MOVEQ #-1,D6
 MOVE.L D7,D0
 BEQ.S \6
 MOVEQ #0,D6
\6:TST D6
 MOVEM.L (SP)+,D1-A1/A6
 RTS
 
 DATA

MESS:DC.B 13,10,10,27,"p MagiC-BOOTER ",27,"q",13,10,0
MESS1:DC.B 13,10,"Patch cache 1",0
MESS2:DC.B 13,10,"Patch cache 2",0
MESS3:DC.B 13,10,"Patch cache 3",0
MESS4:DC.B 13,10,"Patch movep 1",0
MESS5:DC.B 13,10,"Patch movep 2",0
MESS6:DC.B 13,10,"Patch type 68060",0
MESS7:DC.B 13,10,"Patch vectors 1",0
MESS8:DC.B 13,10,"Patch vectors 2",0
MESS9:DC.B 13,10,"Patch vectors 3",0
MESS10:DC.B 13,10,"Patch reset 1",0
MESS11:DC.B 13,10,"Patch reset 2",0
MESS12:DC.B 13,10,"Patch DSP",0
NOM_MAGIC:DC.B "MAGIC.RAM",0
ERR:DC.B 13,10,10,"WARNING ! A part is not patched ! (",0

 BSS
 
 ALIGN.W

CT60:DS.W 1 
MACHINE:DS.L 1
CPU:DS.L 1
 
 END
    