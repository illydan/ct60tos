#!/usr/bin/perl

$file = @ARGV[0];
$filesize = -s $file;

$start_address = 0x07ab00+0x150;

if ( ! defined(open(FILE, $file)) ) {
	warn "Couldn't open $file: $!\n";
	exit;
}

binmode(FILE);

if (read(FILE, $buf, $filesize) != $filesize) {
	warn "Failed reading $filesize bytes\n";
	exit;
}

if ($start_address+$filesize>0x80000-2) {
	warn "File too big\n";
	exit;
}

close(FILE);

$filesize16 = $filesize;
if (($filesize & 15) != 0) {
	$filesize16 = ($filesize|15)+1;
}

print "/* Generated by bin2src.pl from $file */\n\n";

print "\t.align\t2\n";
printf "\t.long\t0x%08x\n", $start_address;
print "\t.long\t$filesize16\n\n";

push @array, unpack "C*", $buf;

# Align on 16 bytes
while (($filesize & 15)!=0) {
	push @array, 0;
	$filesize++;
}

$index = 0;
for ($count = 0; $count<$filesize; $count+=4) {
	my $column = ($count>>2) & 3;
	if ($column==0) {
		print "\t.long\t";
	}
	if ($column==3) {
		printf "0x%08x\n", read_long();
	} else {
		printf "0x%08x,", read_long();
	}
	$index += 4;
}

exit;

sub read_long {
	return	(@array[$index]<<24)|
		(@array[$index+1]<<16)|
		(@array[$index+2]<<8)|
		@array[$index+3];
}
